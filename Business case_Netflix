{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Business case:Netflix","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMCY6eKdQJpzsrKJyLf1wMi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":249,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a3YFx9sLWjlQ","executionInfo":{"status":"ok","timestamp":1658855820510,"user_tz":-330,"elapsed":423,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"282409ad-4a9d-4084-888c-30157607d259"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-07-26 17:17:00--  https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/000/940/original/netflix.csv\n","Resolving d2beiqkhq929f0.cloudfront.net (d2beiqkhq929f0.cloudfront.net)... 99.84.194.17, 99.84.194.174, 99.84.194.18, ...\n","Connecting to d2beiqkhq929f0.cloudfront.net (d2beiqkhq929f0.cloudfront.net)|99.84.194.17|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 3399671 (3.2M) [text/plain]\n","Saving to: ‘netflix.csv.2’\n","\n","\rnetflix.csv.2         0%[                    ]       0  --.-KB/s               \rnetflix.csv.2       100%[===================>]   3.24M  --.-KB/s    in 0.04s   \n","\n","2022-07-26 17:17:00 (81.9 MB/s) - ‘netflix.csv.2’ saved [3399671/3399671]\n","\n"]}],"source":["!wget https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/000/940/original/netflix.csv"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"ouDlFMgqW08N","executionInfo":{"status":"ok","timestamp":1658855821191,"user_tz":-330,"elapsed":22,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":250,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('/content/netflix.csv')"],"metadata":{"id":"GCuBZkcCW5El","executionInfo":{"status":"ok","timestamp":1658855821191,"user_tz":-330,"elapsed":21,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":251,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dmjn3AsMW9ZT","executionInfo":{"status":"ok","timestamp":1658855821192,"user_tz":-330,"elapsed":21,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"0c9a78ee-0147-4ebf-8488-adc66453cd7a"},"execution_count":252,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8807 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   show_id       8807 non-null   object\n"," 1   type          8807 non-null   object\n"," 2   title         8807 non-null   object\n"," 3   director      6173 non-null   object\n"," 4   cast          7982 non-null   object\n"," 5   country       7976 non-null   object\n"," 6   date_added    8797 non-null   object\n"," 7   release_year  8807 non-null   int64 \n"," 8   rating        8803 non-null   object\n"," 9   duration      8804 non-null   object\n"," 10  listed_in     8807 non-null   object\n"," 11  description   8807 non-null   object\n","dtypes: int64(1), object(11)\n","memory usage: 825.8+ KB\n"]}]},{"cell_type":"code","source":["#To get duplicate \n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wp4B67SHW_-w","executionInfo":{"status":"ok","timestamp":1658855821193,"user_tz":-330,"elapsed":20,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"afbc3b2a-c6c0-4dc5-cf1f-ecfd19c1d7ec"},"execution_count":253,"outputs":[{"output_type":"execute_result","data":{"text/plain":["show_id            0\n","type               0\n","title              0\n","director        2634\n","cast             825\n","country          831\n","date_added        10\n","release_year       0\n","rating             4\n","duration           3\n","listed_in          0\n","description        0\n","dtype: int64"]},"metadata":{},"execution_count":253}]},{"cell_type":"code","source":["df['country'] = df['country'].fillna(df['country'].mode()[0])"],"metadata":{"id":"4ye8hMaxXLd-","executionInfo":{"status":"ok","timestamp":1658855821193,"user_tz":-330,"elapsed":14,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":254,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b9e7LYfnX_rN","executionInfo":{"status":"ok","timestamp":1658855821194,"user_tz":-330,"elapsed":14,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"e6ada78e-b4be-4391-e75e-7c491fc7207f"},"execution_count":255,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8807 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   show_id       8807 non-null   object\n"," 1   type          8807 non-null   object\n"," 2   title         8807 non-null   object\n"," 3   director      6173 non-null   object\n"," 4   cast          7982 non-null   object\n"," 5   country       8807 non-null   object\n"," 6   date_added    8797 non-null   object\n"," 7   release_year  8807 non-null   int64 \n"," 8   rating        8803 non-null   object\n"," 9   duration      8804 non-null   object\n"," 10  listed_in     8807 non-null   object\n"," 11  description   8807 non-null   object\n","dtypes: int64(1), object(11)\n","memory usage: 825.8+ KB\n"]}]},{"cell_type":"code","source":["df['cast'].replace(np.nan, 'No Data found',inplace  = True)\n"],"metadata":{"id":"dsG45TX5YA_p","executionInfo":{"status":"ok","timestamp":1658855821195,"user_tz":-330,"elapsed":10,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":256,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fFI28L-2YWmg","executionInfo":{"status":"ok","timestamp":1658855822081,"user_tz":-330,"elapsed":896,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"cff23b02-0c1e-4585-ce8a-2d1d48c760dd"},"execution_count":257,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8807 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   show_id       8807 non-null   object\n"," 1   type          8807 non-null   object\n"," 2   title         8807 non-null   object\n"," 3   director      6173 non-null   object\n"," 4   cast          8807 non-null   object\n"," 5   country       8807 non-null   object\n"," 6   date_added    8797 non-null   object\n"," 7   release_year  8807 non-null   int64 \n"," 8   rating        8803 non-null   object\n"," 9   duration      8804 non-null   object\n"," 10  listed_in     8807 non-null   object\n"," 11  description   8807 non-null   object\n","dtypes: int64(1), object(11)\n","memory usage: 825.8+ KB\n"]}]},{"cell_type":"code","source":["df['director'].replace(np.nan, 'No Data found',inplace  = True)"],"metadata":{"id":"ZdS36QC_YZLu","executionInfo":{"status":"ok","timestamp":1658855822082,"user_tz":-330,"elapsed":64,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":258,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q26s2ezaYbxq","executionInfo":{"status":"ok","timestamp":1658855822083,"user_tz":-330,"elapsed":65,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"f41915ad-956b-463a-8cc2-7d3a02478c24"},"execution_count":259,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8807 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   show_id       8807 non-null   object\n"," 1   type          8807 non-null   object\n"," 2   title         8807 non-null   object\n"," 3   director      8807 non-null   object\n"," 4   cast          8807 non-null   object\n"," 5   country       8807 non-null   object\n"," 6   date_added    8797 non-null   object\n"," 7   release_year  8807 non-null   int64 \n"," 8   rating        8803 non-null   object\n"," 9   duration      8804 non-null   object\n"," 10  listed_in     8807 non-null   object\n"," 11  description   8807 non-null   object\n","dtypes: int64(1), object(11)\n","memory usage: 825.8+ KB\n"]}]},{"cell_type":"code","source":["df.drop_duplicates(inplace=True)"],"metadata":{"id":"N1VQ2lxBYdOe","executionInfo":{"status":"ok","timestamp":1658855822085,"user_tz":-330,"elapsed":57,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":260,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWbCV3dcYpVw","executionInfo":{"status":"ok","timestamp":1658855822085,"user_tz":-330,"elapsed":56,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"971ff0a2-774a-4aed-c595-f9e1f05e0cf7"},"execution_count":261,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 8807 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   show_id       8807 non-null   object\n"," 1   type          8807 non-null   object\n"," 2   title         8807 non-null   object\n"," 3   director      8807 non-null   object\n"," 4   cast          8807 non-null   object\n"," 5   country       8807 non-null   object\n"," 6   date_added    8797 non-null   object\n"," 7   release_year  8807 non-null   int64 \n"," 8   rating        8803 non-null   object\n"," 9   duration      8804 non-null   object\n"," 10  listed_in     8807 non-null   object\n"," 11  description   8807 non-null   object\n","dtypes: int64(1), object(11)\n","memory usage: 894.5+ KB\n"]}]},{"cell_type":"code","source":["df[df['rating'].isnull()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":306},"id":"Hw2N_ckEYqni","executionInfo":{"status":"ok","timestamp":1658855822087,"user_tz":-330,"elapsed":52,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"57dd2e8a-f468-4a2d-c65a-e0cdd7009483"},"execution_count":262,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     show_id     type                                              title  \\\n","5989   s5990    Movie  13TH: A Conversation with Oprah Winfrey & Ava ...   \n","6827   s6828  TV Show                  Gargantia on the Verdurous Planet   \n","7312   s7313  TV Show                                       Little Lunch   \n","7537   s7538    Movie                               My Honor Was Loyalty   \n","\n","             director                                               cast  \\\n","5989    No Data found                        Oprah Winfrey, Ava DuVernay   \n","6827    No Data found  Kaito Ishikawa, Hisako Kanemoto, Ai Kayano, Ka...   \n","7312    No Data found  Flynn Curry, Olivia Deeble, Madison Lu, Oisín ...   \n","7537  Alessandro Pepe  Leone Frisa, Paolo Vaccarino, Francesco Miglio...   \n","\n","            country        date_added  release_year rating  duration  \\\n","5989  United States  January 26, 2017          2017    NaN    37 min   \n","6827          Japan  December 1, 2016          2013    NaN  1 Season   \n","7312      Australia  February 1, 2018          2015    NaN  1 Season   \n","7537          Italy     March 1, 2017          2015    NaN   115 min   \n","\n","                                 listed_in  \\\n","5989                                Movies   \n","6827  Anime Series, International TV Shows   \n","7312                 Kids' TV, TV Comedies   \n","7537                                Dramas   \n","\n","                                            description  \n","5989  Oprah Winfrey sits down with director Ava DuVe...  \n","6827  After falling through a wormhole, a space-dwel...  \n","7312  Adopting a child's perspective, this show take...  \n","7537  Amid the chaos and horror of World War II, a c...  "],"text/html":["\n","  <div id=\"df-aaec5742-9d39-4dde-af5c-dd49dce59c17\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5989</th>\n","      <td>s5990</td>\n","      <td>Movie</td>\n","      <td>13TH: A Conversation with Oprah Winfrey &amp; Ava ...</td>\n","      <td>No Data found</td>\n","      <td>Oprah Winfrey, Ava DuVernay</td>\n","      <td>United States</td>\n","      <td>January 26, 2017</td>\n","      <td>2017</td>\n","      <td>NaN</td>\n","      <td>37 min</td>\n","      <td>Movies</td>\n","      <td>Oprah Winfrey sits down with director Ava DuVe...</td>\n","    </tr>\n","    <tr>\n","      <th>6827</th>\n","      <td>s6828</td>\n","      <td>TV Show</td>\n","      <td>Gargantia on the Verdurous Planet</td>\n","      <td>No Data found</td>\n","      <td>Kaito Ishikawa, Hisako Kanemoto, Ai Kayano, Ka...</td>\n","      <td>Japan</td>\n","      <td>December 1, 2016</td>\n","      <td>2013</td>\n","      <td>NaN</td>\n","      <td>1 Season</td>\n","      <td>Anime Series, International TV Shows</td>\n","      <td>After falling through a wormhole, a space-dwel...</td>\n","    </tr>\n","    <tr>\n","      <th>7312</th>\n","      <td>s7313</td>\n","      <td>TV Show</td>\n","      <td>Little Lunch</td>\n","      <td>No Data found</td>\n","      <td>Flynn Curry, Olivia Deeble, Madison Lu, Oisín ...</td>\n","      <td>Australia</td>\n","      <td>February 1, 2018</td>\n","      <td>2015</td>\n","      <td>NaN</td>\n","      <td>1 Season</td>\n","      <td>Kids' TV, TV Comedies</td>\n","      <td>Adopting a child's perspective, this show take...</td>\n","    </tr>\n","    <tr>\n","      <th>7537</th>\n","      <td>s7538</td>\n","      <td>Movie</td>\n","      <td>My Honor Was Loyalty</td>\n","      <td>Alessandro Pepe</td>\n","      <td>Leone Frisa, Paolo Vaccarino, Francesco Miglio...</td>\n","      <td>Italy</td>\n","      <td>March 1, 2017</td>\n","      <td>2015</td>\n","      <td>NaN</td>\n","      <td>115 min</td>\n","      <td>Dramas</td>\n","      <td>Amid the chaos and horror of World War II, a c...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aaec5742-9d39-4dde-af5c-dd49dce59c17')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aaec5742-9d39-4dde-af5c-dd49dce59c17 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aaec5742-9d39-4dde-af5c-dd49dce59c17');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":262}]},{"cell_type":"code","source":["df['rating'] = df['rating'].fillna(df['rating'].mode()[0])"],"metadata":{"id":"vyCoI6OyZFLv","executionInfo":{"status":"ok","timestamp":1658855822089,"user_tz":-330,"elapsed":51,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":263,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r3rNRirKZyTr","executionInfo":{"status":"ok","timestamp":1658855822090,"user_tz":-330,"elapsed":51,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"1551e17b-ae86-42be-a8e1-9df54b55e3ac"},"execution_count":264,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 8807 entries, 0 to 8806\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   show_id       8807 non-null   object\n"," 1   type          8807 non-null   object\n"," 2   title         8807 non-null   object\n"," 3   director      8807 non-null   object\n"," 4   cast          8807 non-null   object\n"," 5   country       8807 non-null   object\n"," 6   date_added    8797 non-null   object\n"," 7   release_year  8807 non-null   int64 \n"," 8   rating        8807 non-null   object\n"," 9   duration      8804 non-null   object\n"," 10  listed_in     8807 non-null   object\n"," 11  description   8807 non-null   object\n","dtypes: int64(1), object(11)\n","memory usage: 894.5+ KB\n"]}]},{"cell_type":"code","source":["df[\"date_added\"] = pd.to_datetime(df['date_added'])\n","df['month']=df['date_added'].dt.month\n","df['month_name']=df['date_added'].dt.month_name()\n","df['year'] = df['date_added'].dt.year\n","df['day'] = df['date_added'].dt.day"],"metadata":{"id":"y_Lnc_9eZ2Pv","executionInfo":{"status":"ok","timestamp":1658855822093,"user_tz":-330,"elapsed":47,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":265,"outputs":[]},{"cell_type":"code","source":["df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":274},"id":"Ug0y8219agLy","executionInfo":{"status":"ok","timestamp":1658855822094,"user_tz":-330,"elapsed":48,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"937a7dbd-9096-4949-f6a0-51c3c994153d"},"execution_count":266,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  show_id     type                 title         director  \\\n","0      s1    Movie  Dick Johnson Is Dead  Kirsten Johnson   \n","1      s2  TV Show         Blood & Water    No Data found   \n","2      s3  TV Show             Ganglands  Julien Leclercq   \n","\n","                                                cast        country  \\\n","0                                      No Data found  United States   \n","1  Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n","2  Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...  United States   \n","\n","  date_added  release_year rating   duration  \\\n","0 2021-09-25          2020  PG-13     90 min   \n","1 2021-09-24          2021  TV-MA  2 Seasons   \n","2 2021-09-24          2021  TV-MA   1 Season   \n","\n","                                           listed_in  \\\n","0                                      Documentaries   \n","1    International TV Shows, TV Dramas, TV Mysteries   \n","2  Crime TV Shows, International TV Shows, TV Act...   \n","\n","                                         description  month month_name  \\\n","0  As her father nears the end of his life, filmm...    9.0  September   \n","1  After crossing paths at a party, a Cape Town t...    9.0  September   \n","2  To protect his family from a powerful drug lor...    9.0  September   \n","\n","     year   day  \n","0  2021.0  25.0  \n","1  2021.0  24.0  \n","2  2021.0  24.0  "],"text/html":["\n","  <div id=\"df-042c70e0-c152-48d2-bd4d-aa2b04f200b4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","      <th>month</th>\n","      <th>month_name</th>\n","      <th>year</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>Kirsten Johnson</td>\n","      <td>No Data found</td>\n","      <td>United States</td>\n","      <td>2021-09-25</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","      <td>Documentaries</td>\n","      <td>As her father nears the end of his life, filmm...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>No Data found</td>\n","      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n","      <td>South Africa</td>\n","      <td>2021-09-24</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>s3</td>\n","      <td>TV Show</td>\n","      <td>Ganglands</td>\n","      <td>Julien Leclercq</td>\n","      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n","      <td>United States</td>\n","      <td>2021-09-24</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>1 Season</td>\n","      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n","      <td>To protect his family from a powerful drug lor...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>24.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-042c70e0-c152-48d2-bd4d-aa2b04f200b4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-042c70e0-c152-48d2-bd4d-aa2b04f200b4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-042c70e0-c152-48d2-bd4d-aa2b04f200b4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":266}]},{"cell_type":"code","source":["df['type']=df.type.astype('category')\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iQpgGziBebJT","executionInfo":{"status":"ok","timestamp":1658855822095,"user_tz":-330,"elapsed":47,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"cc03b3d0-2542-4b57-9b5f-c3a9405036db"},"execution_count":267,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 8807 entries, 0 to 8806\n","Data columns (total 16 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   show_id       8807 non-null   object        \n"," 1   type          8807 non-null   category      \n"," 2   title         8807 non-null   object        \n"," 3   director      8807 non-null   object        \n"," 4   cast          8807 non-null   object        \n"," 5   country       8807 non-null   object        \n"," 6   date_added    8797 non-null   datetime64[ns]\n"," 7   release_year  8807 non-null   int64         \n"," 8   rating        8807 non-null   object        \n"," 9   duration      8804 non-null   object        \n"," 10  listed_in     8807 non-null   object        \n"," 11  description   8807 non-null   object        \n"," 12  month         8797 non-null   float64       \n"," 13  month_name    8797 non-null   object        \n"," 14  year          8797 non-null   float64       \n"," 15  day           8797 non-null   float64       \n","dtypes: category(1), datetime64[ns](1), float64(3), int64(1), object(10)\n","memory usage: 1.1+ MB\n"]}]},{"cell_type":"code","source":["sns.countplot(data=df,x='type')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"LsDaftqzfiqB","executionInfo":{"status":"ok","timestamp":1658855822505,"user_tz":-330,"elapsed":447,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"d3b21014-8d8a-47b4-e529-19ffc137e92d"},"execution_count":268,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd782799550>"]},"metadata":{},"execution_count":268},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["\n","plt.figure(figsize=(40,10))\n","\n","k=sns.countplot(data=df,x='release_year')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"id":"tB0aJC4npY1b","executionInfo":{"status":"ok","timestamp":1658855823546,"user_tz":-330,"elapsed":1048,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"8fd7486a-a608-4962-df55-4ec7040cf829"},"execution_count":269,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2880x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["latest_rel=df[df['release_year'] >2016]\n","print(latest_rel)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_VHYfEiCsGYC","executionInfo":{"status":"ok","timestamp":1658855823548,"user_tz":-330,"elapsed":38,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"5a65dde9-1144-4118-ba3d-c6fa39475d08"},"execution_count":270,"outputs":[{"output_type":"stream","name":"stdout","text":["     show_id     type                      title         director  \\\n","0         s1    Movie       Dick Johnson Is Dead  Kirsten Johnson   \n","1         s2  TV Show              Blood & Water    No Data found   \n","2         s3  TV Show                  Ganglands  Julien Leclercq   \n","3         s4  TV Show      Jailbirds New Orleans    No Data found   \n","4         s5  TV Show               Kota Factory    No Data found   \n","...      ...      ...                        ...              ...   \n","8774   s8775    Movie                  يوم الدين  Abu Bakr Shawky   \n","8775   s8776  TV Show            Yeh Meri Family    No Data found   \n","8786   s8787    Movie               You Can Tutu      James Brown   \n","8787   s8788    Movie  You Can’t Fight Christmas      Kenny Young   \n","8803   s8804  TV Show                Zombie Dumb    No Data found   \n","\n","                                                   cast  \\\n","0                                         No Data found   \n","1     Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   \n","2     Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...   \n","3                                         No Data found   \n","4     Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...   \n","...                                                 ...   \n","8774  Rady Gamal, Ahmed Abdelhafiz, Shahira Fahmy, S...   \n","8775  Vishesh Bansal, Mona Singh, Akarsh Khurana, Ah...   \n","8786  Lily O'Regan, Jeannettsy Enriquez Borges, Joel...   \n","8787  Brely Evans, Andra Fuller, Persia White, Porsc...   \n","8803                                      No Data found   \n","\n","                            country date_added  release_year rating  \\\n","0                     United States 2021-09-25          2020  PG-13   \n","1                      South Africa 2021-09-24          2021  TV-MA   \n","2                     United States 2021-09-24          2021  TV-MA   \n","3                     United States 2021-09-24          2021  TV-MA   \n","4                             India 2021-09-24          2021  TV-MA   \n","...                             ...        ...           ...    ...   \n","8774  Egypt, Austria, United States 2019-10-22          2018  TV-14   \n","8775                          India 2018-08-31          2018  TV-PG   \n","8786                 United Kingdom 2017-12-31          2017   TV-G   \n","8787                  United States 2017-12-19          2017  TV-PG   \n","8803                  United States 2019-07-01          2018  TV-Y7   \n","\n","       duration                                          listed_in  \\\n","0        90 min                                      Documentaries   \n","1     2 Seasons    International TV Shows, TV Dramas, TV Mysteries   \n","2      1 Season  Crime TV Shows, International TV Shows, TV Act...   \n","3      1 Season                             Docuseries, Reality TV   \n","4     2 Seasons  International TV Shows, Romantic TV Shows, TV ...   \n","...         ...                                                ...   \n","8774     97 min   Dramas, Independent Movies, International Movies   \n","8775   1 Season                International TV Shows, TV Comedies   \n","8786     87 min                           Children & Family Movies   \n","8787     85 min                          Comedies, Romantic Movies   \n","8803  2 Seasons             Kids' TV, Korean TV Shows, TV Comedies   \n","\n","                                            description  month month_name  \\\n","0     As her father nears the end of his life, filmm...    9.0  September   \n","1     After crossing paths at a party, a Cape Town t...    9.0  September   \n","2     To protect his family from a powerful drug lor...    9.0  September   \n","3     Feuds, flirtations and toilet talk go down amo...    9.0  September   \n","4     In a city of coaching centers known to train I...    9.0  September   \n","...                                                 ...    ...        ...   \n","8774  A man cured of leprosy and a young orphan leav...   10.0    October   \n","8775  In the summer of 1998, middle child Harshu bal...    8.0     August   \n","8786  A gifted young ballet dancer struggles to find...   12.0   December   \n","8787  After stepping in to revitalize his family's h...   12.0   December   \n","8803  While living alone in a spooky town, a young g...    7.0       July   \n","\n","        year   day  \n","0     2021.0  25.0  \n","1     2021.0  24.0  \n","2     2021.0  24.0  \n","3     2021.0  24.0  \n","4     2021.0  24.0  \n","...      ...   ...  \n","8774  2019.0  22.0  \n","8775  2018.0  31.0  \n","8786  2017.0  31.0  \n","8787  2017.0  19.0  \n","8803  2019.0   1.0  \n","\n","[4754 rows x 16 columns]\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"figeQdeX0Qjs","executionInfo":{"status":"ok","timestamp":1658855823550,"user_tz":-330,"elapsed":36,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"cb78ccb6-4382-472f-cbf1-b6a71120cf29"},"execution_count":271,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 8807 entries, 0 to 8806\n","Data columns (total 16 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   show_id       8807 non-null   object        \n"," 1   type          8807 non-null   category      \n"," 2   title         8807 non-null   object        \n"," 3   director      8807 non-null   object        \n"," 4   cast          8807 non-null   object        \n"," 5   country       8807 non-null   object        \n"," 6   date_added    8797 non-null   datetime64[ns]\n"," 7   release_year  8807 non-null   int64         \n"," 8   rating        8807 non-null   object        \n"," 9   duration      8804 non-null   object        \n"," 10  listed_in     8807 non-null   object        \n"," 11  description   8807 non-null   object        \n"," 12  month         8797 non-null   float64       \n"," 13  month_name    8797 non-null   object        \n"," 14  year          8797 non-null   float64       \n"," 15  day           8797 non-null   float64       \n","dtypes: category(1), datetime64[ns](1), float64(3), int64(1), object(10)\n","memory usage: 1.3+ MB\n"]}]},{"cell_type":"code","source":["#Movies/TV shows after 2018\n","plt.figure(figsize=(10,20))\n","sns.catplot(y= 'type' , kind = 'count', data = latest_rel )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"6s54f0DI0RaG","executionInfo":{"status":"ok","timestamp":1658855823552,"user_tz":-330,"elapsed":25,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"008da622-8161-4feb-b574-959d6146dc6f"},"execution_count":272,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fd781aac450>"]},"metadata":{},"execution_count":272},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x1440 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 360x360 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Distribution of rating across years from 2018 to 2022\n","plt.figure(figsize=(10,5))\n","\n","k=sns.barplot(data = latest_rel,x= 'rating' , y='release_year' )\n","k.set_ylim([2018,2022])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"8H7kzy0_0r6Z","executionInfo":{"status":"ok","timestamp":1658855824528,"user_tz":-330,"elapsed":993,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"6ef192fc-40ae-4b09-c2c5-8ad3b09114ce"},"execution_count":273,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2018.0, 2022.0)"]},"metadata":{},"execution_count":273},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.figure(figsize=(10,5))\n","\n","k=sns.barplot(data = latest_rel,x= 'rating' , y='release_year' ,hue='type')\n","k.set_ylim([2018,2022])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"zmmWD4Kl6Ezb","executionInfo":{"status":"ok","timestamp":1658855825242,"user_tz":-330,"elapsed":722,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"4057291e-be17-4966-a08f-9cef4610b883"},"execution_count":274,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2018.0, 2022.0)"]},"metadata":{},"execution_count":274},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Distribution of movies/tv show released across years from 2018\n","\n","sns.catplot(x= 'release_year' , kind = 'count', hue='type',data = latest_rel )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"WoDwtgKggOS6","executionInfo":{"status":"ok","timestamp":1658855826151,"user_tz":-330,"elapsed":927,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"11964d6c-8742-4fb3-e40c-39afeaf4bfa6"},"execution_count":275,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fd781a25390>"]},"metadata":{},"execution_count":275},{"output_type":"display_data","data":{"text/plain":["<Figure size 438.75x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["k=sns.countplot(data=latest_rel,x='release_year',hue='type')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"TUr3kHCjhFwP","executionInfo":{"status":"ok","timestamp":1658813208788,"user_tz":-330,"elapsed":44,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"e102bce9-a058-4342-cb39-56a6cb3cef04"},"execution_count":224,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["latest_rel_2016=df[df['release_year'] >=2016]\n","k=sns.countplot(data=latest_rel_2016,x='release_year',hue='type')\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"pYlj3z78hWQe","executionInfo":{"status":"ok","timestamp":1658813928687,"user_tz":-330,"elapsed":408,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"3e4162e9-d152-4c65-d6b8-d79bd62eb95c"},"execution_count":231,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["constraint=df['cast'].apply(lambda x:str(x).split(',')).tolist()"],"metadata":{"id":"-KeHBUc9f1_5","executionInfo":{"status":"ok","timestamp":1658834622280,"user_tz":-330,"elapsed":633,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["df_new=pd.DataFrame(constraint,index=df['title'])\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"eZrf0DrZfnFr","executionInfo":{"status":"ok","timestamp":1658834767943,"user_tz":-330,"elapsed":5,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"30d4e994-fa53-4db2-c8f4-c5dc0037b8ca"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  0                1               2   \\\n","title                                                                   \n","Dick Johnson Is Dead   No Data found             None            None   \n","Blood & Water             Ama Qamata      Khosi Ngema   Gail Mabalane   \n","Ganglands              Sami Bouajila     Tracy Gotoas     Samuel Jouy   \n","Jailbirds New Orleans  No Data found             None            None   \n","Kota Factory              Mayur More   Jitendra Kumar      Ranjan Raj   \n","\n","                                    3                  4                  5   \\\n","title                                                                          \n","Dick Johnson Is Dead              None               None               None   \n","Blood & Water           Thabang Molaba   Dillon Windvogel    Natasha Thahane   \n","Ganglands                Nabiha Akkari     Sofia Lesaffre   Salim Kechiouche   \n","Jailbirds New Orleans             None               None               None   \n","Kota Factory                 Alam Khan      Ahsaas Channa     Revathi Pillai   \n","\n","                                       6                      7   \\\n","title                                                              \n","Dick Johnson Is Dead                 None                   None   \n","Blood & Water                 Arno Greeff      Xolile Tshabalala   \n","Ganglands               Noureddine Farihi   Geert Van Rampelberg   \n","Jailbirds New Orleans                None                   None   \n","Kota Factory                   Urvi Singh             Arun Kumar   \n","\n","                                     8                9   ...    40    41  \\\n","title                                                     ...               \n","Dick Johnson Is Dead               None             None  ...  None  None   \n","Blood & Water           Getmore Sithole   Cindy Mahlangu  ...  None  None   \n","Ganglands               Bakary Diombera             None  ...  None  None   \n","Jailbirds New Orleans              None             None  ...  None  None   \n","Kota Factory                       None             None  ...  None  None   \n","\n","                         42    43    44    45    46    47    48    49  \n","title                                                                  \n","Dick Johnson Is Dead   None  None  None  None  None  None  None  None  \n","Blood & Water          None  None  None  None  None  None  None  None  \n","Ganglands              None  None  None  None  None  None  None  None  \n","Jailbirds New Orleans  None  None  None  None  None  None  None  None  \n","Kota Factory           None  None  None  None  None  None  None  None  \n","\n","[5 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-fdcd2423-19ed-4ffd-8346-ca6a038a81bc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>40</th>\n","      <th>41</th>\n","      <th>42</th>\n","      <th>43</th>\n","      <th>44</th>\n","      <th>45</th>\n","      <th>46</th>\n","      <th>47</th>\n","      <th>48</th>\n","      <th>49</th>\n","    </tr>\n","    <tr>\n","      <th>title</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Dick Johnson Is Dead</th>\n","      <td>No Data found</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>Blood &amp; Water</th>\n","      <td>Ama Qamata</td>\n","      <td>Khosi Ngema</td>\n","      <td>Gail Mabalane</td>\n","      <td>Thabang Molaba</td>\n","      <td>Dillon Windvogel</td>\n","      <td>Natasha Thahane</td>\n","      <td>Arno Greeff</td>\n","      <td>Xolile Tshabalala</td>\n","      <td>Getmore Sithole</td>\n","      <td>Cindy Mahlangu</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>Ganglands</th>\n","      <td>Sami Bouajila</td>\n","      <td>Tracy Gotoas</td>\n","      <td>Samuel Jouy</td>\n","      <td>Nabiha Akkari</td>\n","      <td>Sofia Lesaffre</td>\n","      <td>Salim Kechiouche</td>\n","      <td>Noureddine Farihi</td>\n","      <td>Geert Van Rampelberg</td>\n","      <td>Bakary Diombera</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>Jailbirds New Orleans</th>\n","      <td>No Data found</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>Kota Factory</th>\n","      <td>Mayur More</td>\n","      <td>Jitendra Kumar</td>\n","      <td>Ranjan Raj</td>\n","      <td>Alam Khan</td>\n","      <td>Ahsaas Channa</td>\n","      <td>Revathi Pillai</td>\n","      <td>Urvi Singh</td>\n","      <td>Arun Kumar</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 50 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdcd2423-19ed-4ffd-8346-ca6a038a81bc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fdcd2423-19ed-4ffd-8346-ca6a038a81bc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fdcd2423-19ed-4ffd-8346-ca6a038a81bc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["df_new=df_new.stack()\n","df_new.head(40)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fi6YtFEeQT5p","executionInfo":{"status":"ok","timestamp":1658834772872,"user_tz":-330,"elapsed":374,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"658e1e8e-eaf6-4f7e-870c-7e98f5401fa8"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["title                    \n","Dick Johnson Is Dead   0             No Data found\n","Blood & Water          0                Ama Qamata\n","                       1               Khosi Ngema\n","                       2             Gail Mabalane\n","                       3            Thabang Molaba\n","                       4          Dillon Windvogel\n","                       5           Natasha Thahane\n","                       6               Arno Greeff\n","                       7         Xolile Tshabalala\n","                       8           Getmore Sithole\n","                       9            Cindy Mahlangu\n","                       10            Ryle De Morny\n","                       11          Greteli Fincham\n","                       12     Sello Maake Ka-Ncube\n","                       13              Odwa Gwanya\n","                       14           Mekaila Mathys\n","                       15            Sandi Schultz\n","                       16           Duane Williams\n","                       17          Shamilla Miller\n","                       18         Patrick Mofokeng\n","Ganglands              0             Sami Bouajila\n","                       1              Tracy Gotoas\n","                       2               Samuel Jouy\n","                       3             Nabiha Akkari\n","                       4            Sofia Lesaffre\n","                       5          Salim Kechiouche\n","                       6         Noureddine Farihi\n","                       7      Geert Van Rampelberg\n","                       8           Bakary Diombera\n","Jailbirds New Orleans  0             No Data found\n","Kota Factory           0                Mayur More\n","                       1            Jitendra Kumar\n","                       2                Ranjan Raj\n","                       3                 Alam Khan\n","                       4             Ahsaas Channa\n","                       5            Revathi Pillai\n","                       6                Urvi Singh\n","                       7                Arun Kumar\n","Midnight Mass          0               Kate Siegel\n","                       1              Zach Gilford\n","dtype: object"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["df_new=pd.DataFrame(df_new.reset_index())\n"],"metadata":{"id":"Rkr5YSfwQeW7","executionInfo":{"status":"ok","timestamp":1658834815132,"user_tz":-330,"elapsed":492,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"hMXnIwGuQofR","executionInfo":{"status":"ok","timestamp":1658834820215,"user_tz":-330,"elapsed":424,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"dced02bd-07a2-4f35-cde7-562cb20039c8"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  title  level_1                0\n","0  Dick Johnson Is Dead        0    No Data found\n","1         Blood & Water        0       Ama Qamata\n","2         Blood & Water        1      Khosi Ngema\n","3         Blood & Water        2    Gail Mabalane\n","4         Blood & Water        3   Thabang Molaba"],"text/html":["\n","  <div id=\"df-6899a791-2f8f-4b36-b0ee-bafcf85d7e56\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>level_1</th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>0</td>\n","      <td>No Data found</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Blood &amp; Water</td>\n","      <td>0</td>\n","      <td>Ama Qamata</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Blood &amp; Water</td>\n","      <td>1</td>\n","      <td>Khosi Ngema</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Blood &amp; Water</td>\n","      <td>2</td>\n","      <td>Gail Mabalane</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Blood &amp; Water</td>\n","      <td>3</td>\n","      <td>Thabang Molaba</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6899a791-2f8f-4b36-b0ee-bafcf85d7e56')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6899a791-2f8f-4b36-b0ee-bafcf85d7e56 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6899a791-2f8f-4b36-b0ee-bafcf85d7e56');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["df_new.rename(columns={0:'Actors'},inplace=True)"],"metadata":{"id":"79NZrC_rQp0Z","executionInfo":{"status":"ok","timestamp":1658834864929,"user_tz":-330,"elapsed":4,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["df_new.drop(['level_1'],axis=1,inplace=True)"],"metadata":{"id":"d2NnIo8WQ0i0","executionInfo":{"status":"ok","timestamp":1658834893393,"user_tz":-330,"elapsed":4,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["df_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"xQLu2uwGQ7GH","executionInfo":{"status":"ok","timestamp":1658834896096,"user_tz":-330,"elapsed":7,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"a6856184-f969-44ae-db34-97ab28fba0bf"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      title                  Actors\n","0      Dick Johnson Is Dead           No Data found\n","1             Blood & Water              Ama Qamata\n","2             Blood & Water             Khosi Ngema\n","3             Blood & Water           Gail Mabalane\n","4             Blood & Water          Thabang Molaba\n","...                     ...                     ...\n","64946                Zubaan        Manish Chaudhary\n","64947                Zubaan            Meghna Malik\n","64948                Zubaan           Malkeet Rauni\n","64949                Zubaan          Anita Shabdish\n","64950                Zubaan   Chittaranjan Tripathy\n","\n","[64951 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-d881bbdf-18f1-4f3d-9541-a9424f15b969\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>Actors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>No Data found</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Ama Qamata</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Khosi Ngema</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Gail Mabalane</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Thabang Molaba</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>64946</th>\n","      <td>Zubaan</td>\n","      <td>Manish Chaudhary</td>\n","    </tr>\n","    <tr>\n","      <th>64947</th>\n","      <td>Zubaan</td>\n","      <td>Meghna Malik</td>\n","    </tr>\n","    <tr>\n","      <th>64948</th>\n","      <td>Zubaan</td>\n","      <td>Malkeet Rauni</td>\n","    </tr>\n","    <tr>\n","      <th>64949</th>\n","      <td>Zubaan</td>\n","      <td>Anita Shabdish</td>\n","    </tr>\n","    <tr>\n","      <th>64950</th>\n","      <td>Zubaan</td>\n","      <td>Chittaranjan Tripathy</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64951 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d881bbdf-18f1-4f3d-9541-a9424f15b969')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d881bbdf-18f1-4f3d-9541-a9424f15b969 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d881bbdf-18f1-4f3d-9541-a9424f15b969');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["df_final=df_new.merge(df[['show_id','type','director','country','listed_in','title','release_year','rating','duration']],on='title',how='left')"],"metadata":{"id":"nlYZ1iHlQ8A1","executionInfo":{"status":"ok","timestamp":1658835088081,"user_tz":-330,"elapsed":3,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["df_final"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ECLwTLSkRVIi","executionInfo":{"status":"ok","timestamp":1658835090948,"user_tz":-330,"elapsed":417,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"9482cff3-7b2f-47b2-aaf2-c0753150a578"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      title                  Actors show_id     type  \\\n","0      Dick Johnson Is Dead           No Data found      s1    Movie   \n","1             Blood & Water              Ama Qamata      s2  TV Show   \n","2             Blood & Water             Khosi Ngema      s2  TV Show   \n","3             Blood & Water           Gail Mabalane      s2  TV Show   \n","4             Blood & Water          Thabang Molaba      s2  TV Show   \n","...                     ...                     ...     ...      ...   \n","64946                Zubaan        Manish Chaudhary   s8807    Movie   \n","64947                Zubaan            Meghna Malik   s8807    Movie   \n","64948                Zubaan           Malkeet Rauni   s8807    Movie   \n","64949                Zubaan          Anita Shabdish   s8807    Movie   \n","64950                Zubaan   Chittaranjan Tripathy   s8807    Movie   \n","\n","              director        country  \\\n","0      Kirsten Johnson  United States   \n","1        No Data found   South Africa   \n","2        No Data found   South Africa   \n","3        No Data found   South Africa   \n","4        No Data found   South Africa   \n","...                ...            ...   \n","64946      Mozez Singh          India   \n","64947      Mozez Singh          India   \n","64948      Mozez Singh          India   \n","64949      Mozez Singh          India   \n","64950      Mozez Singh          India   \n","\n","                                             listed_in  release_year rating  \\\n","0                                        Documentaries          2020  PG-13   \n","1      International TV Shows, TV Dramas, TV Mysteries          2021  TV-MA   \n","2      International TV Shows, TV Dramas, TV Mysteries          2021  TV-MA   \n","3      International TV Shows, TV Dramas, TV Mysteries          2021  TV-MA   \n","4      International TV Shows, TV Dramas, TV Mysteries          2021  TV-MA   \n","...                                                ...           ...    ...   \n","64946   Dramas, International Movies, Music & Musicals          2015  TV-14   \n","64947   Dramas, International Movies, Music & Musicals          2015  TV-14   \n","64948   Dramas, International Movies, Music & Musicals          2015  TV-14   \n","64949   Dramas, International Movies, Music & Musicals          2015  TV-14   \n","64950   Dramas, International Movies, Music & Musicals          2015  TV-14   \n","\n","        duration  \n","0         90 min  \n","1      2 Seasons  \n","2      2 Seasons  \n","3      2 Seasons  \n","4      2 Seasons  \n","...          ...  \n","64946    111 min  \n","64947    111 min  \n","64948    111 min  \n","64949    111 min  \n","64950    111 min  \n","\n","[64951 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-012511a4-cc1b-4b63-b465-fe40b42deeab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>Actors</th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>director</th>\n","      <th>country</th>\n","      <th>listed_in</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>No Data found</td>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Kirsten Johnson</td>\n","      <td>United States</td>\n","      <td>Documentaries</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Ama Qamata</td>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>No Data found</td>\n","      <td>South Africa</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Khosi Ngema</td>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>No Data found</td>\n","      <td>South Africa</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Gail Mabalane</td>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>No Data found</td>\n","      <td>South Africa</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Blood &amp; Water</td>\n","      <td>Thabang Molaba</td>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>No Data found</td>\n","      <td>South Africa</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>64946</th>\n","      <td>Zubaan</td>\n","      <td>Manish Chaudhary</td>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Mozez Singh</td>\n","      <td>India</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","    </tr>\n","    <tr>\n","      <th>64947</th>\n","      <td>Zubaan</td>\n","      <td>Meghna Malik</td>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Mozez Singh</td>\n","      <td>India</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","    </tr>\n","    <tr>\n","      <th>64948</th>\n","      <td>Zubaan</td>\n","      <td>Malkeet Rauni</td>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Mozez Singh</td>\n","      <td>India</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","    </tr>\n","    <tr>\n","      <th>64949</th>\n","      <td>Zubaan</td>\n","      <td>Anita Shabdish</td>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Mozez Singh</td>\n","      <td>India</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","    </tr>\n","    <tr>\n","      <th>64950</th>\n","      <td>Zubaan</td>\n","      <td>Chittaranjan Tripathy</td>\n","      <td>s8807</td>\n","      <td>Movie</td>\n","      <td>Mozez Singh</td>\n","      <td>India</td>\n","      <td>Dramas, International Movies, Music &amp; Musicals</td>\n","      <td>2015</td>\n","      <td>TV-14</td>\n","      <td>111 min</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64951 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-012511a4-cc1b-4b63-b465-fe40b42deeab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-012511a4-cc1b-4b63-b465-fe40b42deeab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-012511a4-cc1b-4b63-b465-fe40b42deeab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["constraint=df['country'].apply(lambda x:str(x).split(',')).tolist()\n","df_new=pd.DataFrame(constraint,index=df['country'])\n","df_new=pd.DataFrame(df_new.reset_index())\n","df_new\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"r3cbMfo_RWT6","executionInfo":{"status":"ok","timestamp":1658837733620,"user_tz":-330,"elapsed":394,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"1944fabd-399f-4d1e-b81c-03d71971de11"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            country              0     1     2     3     4     5     6     7  \\\n","0     United States  United States  None  None  None  None  None  None  None   \n","1      South Africa   South Africa  None  None  None  None  None  None  None   \n","2     United States  United States  None  None  None  None  None  None  None   \n","3     United States  United States  None  None  None  None  None  None  None   \n","4             India          India  None  None  None  None  None  None  None   \n","...             ...            ...   ...   ...   ...   ...   ...   ...   ...   \n","8802  United States  United States  None  None  None  None  None  None  None   \n","8803  United States  United States  None  None  None  None  None  None  None   \n","8804  United States  United States  None  None  None  None  None  None  None   \n","8805  United States  United States  None  None  None  None  None  None  None   \n","8806          India          India  None  None  None  None  None  None  None   \n","\n","         8     9    10    11  \n","0     None  None  None  None  \n","1     None  None  None  None  \n","2     None  None  None  None  \n","3     None  None  None  None  \n","4     None  None  None  None  \n","...    ...   ...   ...   ...  \n","8802  None  None  None  None  \n","8803  None  None  None  None  \n","8804  None  None  None  None  \n","8805  None  None  None  None  \n","8806  None  None  None  None  \n","\n","[8807 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-d3fabef0-5159-4f46-9fc8-e988a0c24d29\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>South Africa</td>\n","      <td>South Africa</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>India</td>\n","      <td>India</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8802</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>8803</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>8804</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>8805</th>\n","      <td>United States</td>\n","      <td>United States</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>8806</th>\n","      <td>India</td>\n","      <td>India</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8807 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3fabef0-5159-4f46-9fc8-e988a0c24d29')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d3fabef0-5159-4f46-9fc8-e988a0c24d29 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d3fabef0-5159-4f46-9fc8-e988a0c24d29');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["df.country=df.country.str.split(',')\n"],"metadata":{"id":"2TgQeQakQXm4","executionInfo":{"status":"ok","timestamp":1658838343586,"user_tz":-330,"elapsed":615,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"PggIEkUZeITy","executionInfo":{"status":"ok","timestamp":1658838357939,"user_tz":-330,"elapsed":661,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"aa56acba-2729-4f67-8ac5-729edf409d29"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  show_id     type                  title         director  \\\n","0      s1    Movie   Dick Johnson Is Dead  Kirsten Johnson   \n","1      s2  TV Show          Blood & Water    No Data found   \n","2      s3  TV Show              Ganglands  Julien Leclercq   \n","3      s4  TV Show  Jailbirds New Orleans    No Data found   \n","4      s5  TV Show           Kota Factory    No Data found   \n","\n","                                                cast          country  \\\n","0                                      No Data found  [United States]   \n","1  Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   [South Africa]   \n","2  Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...  [United States]   \n","3                                      No Data found  [United States]   \n","4  Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          [India]   \n","\n","  date_added  release_year rating   duration  \\\n","0 2021-09-25          2020  PG-13     90 min   \n","1 2021-09-24          2021  TV-MA  2 Seasons   \n","2 2021-09-24          2021  TV-MA   1 Season   \n","3 2021-09-24          2021  TV-MA   1 Season   \n","4 2021-09-24          2021  TV-MA  2 Seasons   \n","\n","                                           listed_in  \\\n","0                                      Documentaries   \n","1    International TV Shows, TV Dramas, TV Mysteries   \n","2  Crime TV Shows, International TV Shows, TV Act...   \n","3                             Docuseries, Reality TV   \n","4  International TV Shows, Romantic TV Shows, TV ...   \n","\n","                                         description  month month_name  \\\n","0  As her father nears the end of his life, filmm...    9.0  September   \n","1  After crossing paths at a party, a Cape Town t...    9.0  September   \n","2  To protect his family from a powerful drug lor...    9.0  September   \n","3  Feuds, flirtations and toilet talk go down amo...    9.0  September   \n","4  In a city of coaching centers known to train I...    9.0  September   \n","\n","     year   day  \n","0  2021.0  25.0  \n","1  2021.0  24.0  \n","2  2021.0  24.0  \n","3  2021.0  24.0  \n","4  2021.0  24.0  "],"text/html":["\n","  <div id=\"df-8476532a-107f-4ff0-b9c6-5e31e6d40632\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>country</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","      <th>month</th>\n","      <th>month_name</th>\n","      <th>year</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>s1</td>\n","      <td>Movie</td>\n","      <td>Dick Johnson Is Dead</td>\n","      <td>Kirsten Johnson</td>\n","      <td>No Data found</td>\n","      <td>[United States]</td>\n","      <td>2021-09-25</td>\n","      <td>2020</td>\n","      <td>PG-13</td>\n","      <td>90 min</td>\n","      <td>Documentaries</td>\n","      <td>As her father nears the end of his life, filmm...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>s2</td>\n","      <td>TV Show</td>\n","      <td>Blood &amp; Water</td>\n","      <td>No Data found</td>\n","      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n","      <td>[South Africa]</td>\n","      <td>2021-09-24</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n","      <td>After crossing paths at a party, a Cape Town t...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>s3</td>\n","      <td>TV Show</td>\n","      <td>Ganglands</td>\n","      <td>Julien Leclercq</td>\n","      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n","      <td>[United States]</td>\n","      <td>2021-09-24</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>1 Season</td>\n","      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n","      <td>To protect his family from a powerful drug lor...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>s4</td>\n","      <td>TV Show</td>\n","      <td>Jailbirds New Orleans</td>\n","      <td>No Data found</td>\n","      <td>No Data found</td>\n","      <td>[United States]</td>\n","      <td>2021-09-24</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>1 Season</td>\n","      <td>Docuseries, Reality TV</td>\n","      <td>Feuds, flirtations and toilet talk go down amo...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>s5</td>\n","      <td>TV Show</td>\n","      <td>Kota Factory</td>\n","      <td>No Data found</td>\n","      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n","      <td>[India]</td>\n","      <td>2021-09-24</td>\n","      <td>2021</td>\n","      <td>TV-MA</td>\n","      <td>2 Seasons</td>\n","      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n","      <td>In a city of coaching centers known to train I...</td>\n","      <td>9.0</td>\n","      <td>September</td>\n","      <td>2021.0</td>\n","      <td>24.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8476532a-107f-4ff0-b9c6-5e31e6d40632')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8476532a-107f-4ff0-b9c6-5e31e6d40632 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8476532a-107f-4ff0-b9c6-5e31e6d40632');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["df=df.explode('country')"],"metadata":{"id":"TaZlDvENeNdW","executionInfo":{"status":"ok","timestamp":1658838476876,"user_tz":-330,"elapsed":362,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":["df.groupby(by='country').count()['show_id'].plot(kind='bar',figsize=(20,10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":723},"id":"YTcPNiXQearB","executionInfo":{"status":"ok","timestamp":1658838563593,"user_tz":-330,"elapsed":4844,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"ae2d61fc-7cb4-4e29-a44d-9479aa081555"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd784158050>"]},"metadata":{},"execution_count":85},{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Top 10 countries where content is released\n","df.groupby(by='country').count()['show_id'].sort_values(ascending=True).tail(10).plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"rDCYCBurfDj2","executionInfo":{"status":"ok","timestamp":1658838685011,"user_tz":-330,"elapsed":1017,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"8fdd0744-62c0-4476-c3e7-c6974a140817"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd7864e70d0>"]},"metadata":{},"execution_count":92},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BqwgLZBohXT_","executionInfo":{"status":"ok","timestamp":1658839205765,"user_tz":-330,"elapsed":8,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"db71c09f-e58c-44ba-ac43-79213628894d"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 10850 entries, 0 to 8806\n","Data columns (total 16 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   show_id       10850 non-null  object        \n"," 1   type          10850 non-null  category      \n"," 2   title         10850 non-null  object        \n"," 3   director      10850 non-null  object        \n"," 4   cast          10850 non-null  object        \n"," 5   country       10850 non-null  object        \n"," 6   date_added    10840 non-null  datetime64[ns]\n"," 7   release_year  10850 non-null  int64         \n"," 8   rating        10850 non-null  object        \n"," 9   duration      10847 non-null  object        \n"," 10  listed_in     10850 non-null  object        \n"," 11  description   10850 non-null  object        \n"," 12  month         10840 non-null  float64       \n"," 13  month_name    10840 non-null  object        \n"," 14  year          10840 non-null  float64       \n"," 15  day           10840 non-null  float64       \n","dtypes: category(1), datetime64[ns](1), float64(3), int64(1), object(10)\n","memory usage: 1.3+ MB\n"]}]},{"cell_type":"code","source":["#Too calculate the count of films produced by a country\n","df.month=df.month.astype('category')\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o58YqHdLay-H","executionInfo":{"status":"ok","timestamp":1658839254791,"user_tz":-330,"elapsed":374,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"e83647b8-7cfa-44ad-dfc3-5040725fd88d"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 10850 entries, 0 to 8806\n","Data columns (total 16 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   show_id       10850 non-null  object        \n"," 1   type          10850 non-null  category      \n"," 2   title         10850 non-null  object        \n"," 3   director      10850 non-null  object        \n"," 4   cast          10850 non-null  object        \n"," 5   country       10850 non-null  object        \n"," 6   date_added    10840 non-null  datetime64[ns]\n"," 7   release_year  10850 non-null  int64         \n"," 8   rating        10850 non-null  object        \n"," 9   duration      10847 non-null  object        \n"," 10  listed_in     10850 non-null  object        \n"," 11  description   10850 non-null  object        \n"," 12  month         10840 non-null  category      \n"," 13  month_name    10840 non-null  object        \n"," 14  year          10840 non-null  float64       \n"," 15  day           10840 non-null  float64       \n","dtypes: category(2), datetime64[ns](1), float64(2), int64(1), object(10)\n","memory usage: 1.3+ MB\n"]}]},{"cell_type":"code","source":["df.month_name=df.month.astype('category')\n","df.cast=df.cast.str.split(',')"],"metadata":{"id":"Oi8nZNbYhlRI","executionInfo":{"status":"ok","timestamp":1658839375108,"user_tz":-330,"elapsed":677,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":97,"outputs":[]},{"cell_type":"code","source":["sns.pairplot(data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":844},"id":"xqf2M3sPwv2W","executionInfo":{"status":"error","timestamp":1658843686369,"user_tz":-330,"elapsed":436636,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"5721381e-fc7d-4f0f-81c0-7ffe0405eb76"},"execution_count":190,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-190-2baefb891abc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpairplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     44\u001b[0m             )\n\u001b[1;32m     45\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 46\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     47\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/axisgrid.py\u001b[0m in \u001b[0;36mpairplot\u001b[0;34m(data, hue, hue_order, palette, vars, x_vars, y_vars, kind, diag_kind, markers, height, aspect, corner, dropna, plot_kws, diag_kws, grid_kws, size)\u001b[0m\n\u001b[1;32m   2124\u001b[0m     \u001b[0mdiag_kws\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"legend\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2125\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mdiag_kind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"hist\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2126\u001b[0;31m         \u001b[0mgrid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_diag\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistplot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mdiag_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2127\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mdiag_kind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"kde\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2128\u001b[0m         \u001b[0mdiag_kws\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"fill\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/axisgrid.py\u001b[0m in \u001b[0;36mmap_diag\u001b[0;34m(self, func, **kwargs)\u001b[0m\n\u001b[1;32m   1476\u001b[0m             \u001b[0mplot_kwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"hue_order\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_hue_order\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1477\u001b[0m             \u001b[0mplot_kwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"palette\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_orig_palette\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1478\u001b[0;31m             \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvector\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mplot_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1479\u001b[0m             \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegend_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1480\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py\u001b[0m in \u001b[0;36mhistplot\u001b[0;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)\u001b[0m\n\u001b[1;32m   1473\u001b[0m             \u001b[0mestimate_kws\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mestimate_kws\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1474\u001b[0m             \u001b[0mline_kws\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mline_kws\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1475\u001b[0;31m             \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1476\u001b[0m         )\n\u001b[1;32m   1477\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py\u001b[0m in \u001b[0;36mplot_univariate_histogram\u001b[0;34m(self, multiple, element, fill, common_norm, common_bins, shrink, kde, kde_kws, color, legend, line_kws, estimate_kws, **plot_kws)\u001b[0m\n\u001b[1;32m    426\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    427\u001b[0m         \u001b[0;31m# First pass through the data to compute the histograms\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 428\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0msub_vars\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msub_data\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miter_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"hue\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfrom_comp_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    429\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    430\u001b[0m             \u001b[0;31m# Prepare the relevant data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36miter_data\u001b[0;34m(self, grouping_vars, reverse, from_comp_data)\u001b[0m\n\u001b[1;32m    981\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    982\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mfrom_comp_data\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 983\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcomp_data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    984\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    985\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot_data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36mcomp_data\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1055\u001b[0m                     \u001b[0morig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mvar\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1056\u001b[0m                 \u001b[0mcomp_col\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvar\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1057\u001b[0;31m                 \u001b[0mcomp_col\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0morig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numeric\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconvert_units\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0morig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1058\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1059\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_scale\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"log\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m    721\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    722\u001b[0m         \u001b[0miloc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"iloc\"\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 723\u001b[0;31m         \u001b[0miloc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setitem_with_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    724\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    725\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_validate_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_setitem_with_indexer\u001b[0;34m(self, indexer, value, name)\u001b[0m\n\u001b[1;32m   1730\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setitem_with_indexer_split_path\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1731\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1732\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_setitem_single_block\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1733\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_setitem_with_indexer_split_path\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_setitem_single_block\u001b[0;34m(self, indexer, value, name)\u001b[0m\n\u001b[1;32m   1957\u001b[0m             \u001b[0;31m# setting for extensionarrays that store dicts. Need to decide\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1958\u001b[0m             \u001b[0;31m# if it's worth supporting that.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1959\u001b[0;31m             \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_align_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1960\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1961\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mABCDataFrame\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mname\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"iloc\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_align_series\u001b[0;34m(self, indexer, ser, multiindex_indexer)\u001b[0m\n\u001b[1;32m   2094\u001b[0m             \u001b[0;31m# series, so need to broadcast (see GH5206)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2095\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0msum_aligners\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mis_sequence\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2096\u001b[0;31m                 \u001b[0mser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2097\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2098\u001b[0m                 \u001b[0;31m# single indexer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, index, **kwargs)\u001b[0m\n\u001b[1;32m   4578\u001b[0m     )\n\u001b[1;32m   4579\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4580\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4581\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4582\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mdeprecate_nonkeyword_arguments\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mversion\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallowed_args\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"self\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"labels\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   4817\u001b[0m         \u001b[0;31m# perform the reindex on the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4818\u001b[0m         return self._reindex_axes(\n\u001b[0;32m-> 4819\u001b[0;31m             \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlimit\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4820\u001b[0m         ).__finalize__(self, method=\"reindex\")\n\u001b[1;32m   4821\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_axes\u001b[0;34m(self, axes, level, limit, tolerance, method, fill_value, copy)\u001b[0m\n\u001b[1;32m   4841\u001b[0m                 \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4842\u001b[0m                 \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4843\u001b[0;31m                 \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4844\u001b[0m             )\n\u001b[1;32m   4845\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_with_indexers\u001b[0;34m(self, reindexers, fill_value, copy, allow_dups)\u001b[0m\n\u001b[1;32m   4887\u001b[0m                 \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4888\u001b[0m                 \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mallow_dups\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4889\u001b[0;31m                 \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4890\u001b[0m             )\n\u001b[1;32m   4891\u001b[0m             \u001b[0;31m# If we've made a copy once, no need to make another one\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mreindex_indexer\u001b[0;34m(self, new_axis, indexer, axis, fill_value, allow_dups, copy, consolidate, only_slice)\u001b[0m\n\u001b[1;32m    668\u001b[0m         \u001b[0;31m# some axes don't allow reindexing with dups\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    669\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mallow_dups\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 670\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_can_reindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    671\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    672\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_validate_can_reindex\u001b[0;34m(self, indexer)\u001b[0m\n\u001b[1;32m   3783\u001b[0m         \u001b[0;31m# trying to reindex on an axis with duplicates\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3784\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_index_as_unique\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3785\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"cannot reindex from a duplicate axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3786\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3787\u001b[0m     def reindex(\n","\u001b[0;31mValueError\u001b[0m: cannot reindex from a duplicate axis"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 540x540 with 12 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df=df.explode('cast')"],"metadata":{"id":"p9gormYfbN8h","executionInfo":{"status":"ok","timestamp":1658839407460,"user_tz":-330,"elapsed":397,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":99,"outputs":[]},{"cell_type":"code","source":["#number of movies directed by directors\n","director_list=df.groupby(by=['director']).count()['show_id'].sort_values(ascending=False)[1:6]\n","director_list=pd.DataFrame(director_list.reset_index())"],"metadata":{"id":"i678Bfa_ZOMX","executionInfo":{"status":"ok","timestamp":1658840171892,"user_tz":-330,"elapsed":385,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":130,"outputs":[]},{"cell_type":"code","source":["director_list.rename(columns={'show_id':'Directed count'},inplace=True)\n","director_list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fbMVRmTskIbR","executionInfo":{"status":"ok","timestamp":1658840183877,"user_tz":-330,"elapsed":430,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"32f7f14a-4977-4295-efe5-5fb826038dc8"},"execution_count":132,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           director  Directed count\n","0   Martin Scorsese             217\n","1  Steven Spielberg             205\n","2      Raja Gosnell             154\n","3   Martin Campbell             154\n","4               McG             150"],"text/html":["\n","  <div id=\"df-721eb320-4e82-4a6e-bb9a-d4bf3ccad6ce\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>director</th>\n","      <th>Directed count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Martin Scorsese</td>\n","      <td>217</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Steven Spielberg</td>\n","      <td>205</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Raja Gosnell</td>\n","      <td>154</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Martin Campbell</td>\n","      <td>154</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>McG</td>\n","      <td>150</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-721eb320-4e82-4a6e-bb9a-d4bf3ccad6ce')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-721eb320-4e82-4a6e-bb9a-d4bf3ccad6ce button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-721eb320-4e82-4a6e-bb9a-d4bf3ccad6ce');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["#Top 5 directors across the set\n","plt.figure(figsize=(10,5))\n","sns.barplot(data=director_list,x='director',y='Directed count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"GYN7u3Bei8oX","executionInfo":{"status":"ok","timestamp":1658840393736,"user_tz":-330,"elapsed":481,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"ad5b4c54-339f-44a3-931d-611586531428"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd7845b9050>"]},"metadata":{},"execution_count":141},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df.type.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rdWQ_OwCno45","executionInfo":{"status":"ok","timestamp":1658840858847,"user_tz":-330,"elapsed":9,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"7fd72576-97b3-4eca-dca6-00c0d5dca82b"},"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Movie', 'TV Show']\n","Categories (2, object): ['Movie', 'TV Show']"]},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["#Number of movies released countrywise top 10\n","contentlist=df.groupby(['country','type']).count()[2:].head(10).reset_index()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nf2bT0kujZou","executionInfo":{"status":"ok","timestamp":1658843153377,"user_tz":-330,"elapsed":517,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"fb3182b0-8a10-4479-8887-f42d8ffb8db3"},"execution_count":187,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        type       country  show_id  title  director  cast  date_added  \\\n","0      Movie       Albania        4      4         4     4           4   \n","1      Movie       Algeria       29     29        29    29          29   \n","2      Movie        Angola        8      8         8     8           8   \n","3      Movie     Argentina      110    110       110   110         110   \n","4      Movie       Armenia        1      1         1     1           1   \n","..       ...           ...      ...    ...       ...   ...         ...   \n","387  TV Show       Uruguay        1      1         1     1           1   \n","388  TV Show     Venezuela        0      0         0     0           0   \n","389  TV Show       Vietnam        0      0         0     0           0   \n","390  TV Show  West Germany        0      0         0     0           0   \n","391  TV Show      Zimbabwe        0      0         0     0           0   \n","\n","     release_year  rating  duration  listed_in  description  month  \\\n","0               4       4         4          4            4      4   \n","1              29      29        29         29           29     29   \n","2               8       8         8          8            8      8   \n","3             110     110       110        110          110    110   \n","4               1       1         1          1            1      1   \n","..            ...     ...       ...        ...          ...    ...   \n","387             1       1         1          1            1      1   \n","388             0       0         0          0            0      0   \n","389             0       0         0          0            0      0   \n","390             0       0         0          0            0      0   \n","391             0       0         0          0            0      0   \n","\n","     month_name  year  day  \n","0             4     4    4  \n","1            29    29   29  \n","2             8     8    8  \n","3           110   110  110  \n","4             1     1    1  \n","..          ...   ...  ...  \n","387           1     1    1  \n","388           0     0    0  \n","389           0     0    0  \n","390           0     0    0  \n","391           0     0    0  \n","\n","[392 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-b48e8a71-7eff-4795-aec4-50e264fbf29b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>type</th>\n","      <th>country</th>\n","      <th>show_id</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","      <th>month</th>\n","      <th>month_name</th>\n","      <th>year</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Movie</td>\n","      <td>Albania</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Movie</td>\n","      <td>Algeria</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Movie</td>\n","      <td>Angola</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Movie</td>\n","      <td>Argentina</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>110</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Movie</td>\n","      <td>Armenia</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>387</th>\n","      <td>TV Show</td>\n","      <td>Uruguay</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>388</th>\n","      <td>TV Show</td>\n","      <td>Venezuela</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>389</th>\n","      <td>TV Show</td>\n","      <td>Vietnam</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>390</th>\n","      <td>TV Show</td>\n","      <td>West Germany</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>391</th>\n","      <td>TV Show</td>\n","      <td>Zimbabwe</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 16 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b48e8a71-7eff-4795-aec4-50e264fbf29b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b48e8a71-7eff-4795-aec4-50e264fbf29b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b48e8a71-7eff-4795-aec4-50e264fbf29b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":187}]},{"cell_type":"code","source":[""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"1lKSvXgLr9eg","executionInfo":{"status":"error","timestamp":1658843109301,"user_tz":-330,"elapsed":5,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"70e2a7aa-bbf2-41ad-da00-7e4fa6fc4c8f"},"execution_count":185,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-185-5eb34cfb6d53>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcontentlist\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'type'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;34m'Movie'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, axis)\u001b[0m\n\u001b[1;32m    635\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    636\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 637\u001b[0;31m             \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    638\u001b[0m         \u001b[0mnew_self\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    639\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mnew_self\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_get_axis_number\u001b[0;34m(cls, axis)\u001b[0m\n\u001b[1;32m    544\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAxis\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    545\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 546\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_AXIS_TO_AXIS_NUMBER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    547\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    548\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"No axis named {axis} for object type {cls.__name__}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: unhashable type: 'list'"]}]},{"cell_type":"code","source":["sns.barplot(data=contentlist,x='country',hue='type')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"beEU0DFgsP2y","executionInfo":{"status":"ok","timestamp":1658842205383,"user_tz":-330,"elapsed":428,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"a8f7b073-1323-49db-e8b2-f624ba92bece"},"execution_count":177,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          country     type  show_id  title  director  cast  date_added  \\\n","0                    Movie       41     41        41    41          41   \n","1                  TV Show        4      4         4     4           4   \n","2     Afghanistan    Movie        1      1         1     1           1   \n","3     Afghanistan  TV Show        0      0         0     0           0   \n","4         Albania    Movie        4      4         4     4           4   \n","..            ...      ...      ...    ...       ...   ...         ...   \n","389       Vietnam  TV Show        0      0         0     0           0   \n","390  West Germany    Movie        1      1         1     1           1   \n","391  West Germany  TV Show        0      0         0     0           0   \n","392      Zimbabwe    Movie       12     12        12    12          12   \n","393      Zimbabwe  TV Show        0      0         0     0           0   \n","\n","     release_year  rating  duration  listed_in  description  month  \\\n","0              41      41        41         41           41     41   \n","1               4       4         4          4            4      4   \n","2               1       1         1          1            1      1   \n","3               0       0         0          0            0      0   \n","4               4       4         4          4            4      4   \n","..            ...     ...       ...        ...          ...    ...   \n","389             0       0         0          0            0      0   \n","390             1       1         1          1            1      1   \n","391             0       0         0          0            0      0   \n","392            12      12        12         12           12     12   \n","393             0       0         0          0            0      0   \n","\n","     month_name  year  day  \n","0            41    41   41  \n","1             4     4    4  \n","2             1     1    1  \n","3             0     0    0  \n","4             4     4    4  \n","..          ...   ...  ...  \n","389           0     0    0  \n","390           1     1    1  \n","391           0     0    0  \n","392          12    12   12  \n","393           0     0    0  \n","\n","[394 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-f222721f-76d3-4145-ba87-c8694bce9ff6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>type</th>\n","      <th>show_id</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","      <th>month</th>\n","      <th>month_name</th>\n","      <th>year</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>Movie</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td></td>\n","      <td>TV Show</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Afghanistan</td>\n","      <td>Movie</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Afghanistan</td>\n","      <td>TV Show</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albania</td>\n","      <td>Movie</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>389</th>\n","      <td>Vietnam</td>\n","      <td>TV Show</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>390</th>\n","      <td>West Germany</td>\n","      <td>Movie</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>391</th>\n","      <td>West Germany</td>\n","      <td>TV Show</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>Zimbabwe</td>\n","      <td>Movie</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>Zimbabwe</td>\n","      <td>TV Show</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>394 rows × 16 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f222721f-76d3-4145-ba87-c8694bce9ff6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f222721f-76d3-4145-ba87-c8694bce9ff6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f222721f-76d3-4145-ba87-c8694bce9ff6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":177}]},{"cell_type":"code","source":["df_tv.groupby(['country','month']).count().sort_values(by='show_id',ascending=False).reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"PhydSGKt4D3J","executionInfo":{"status":"ok","timestamp":1658845160076,"user_tz":-330,"elapsed":460,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"50312830-5f60-47ab-f4dc-144d40ba220f"},"execution_count":216,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            country month  show_id  type  title  director  cast  date_added  \\\n","0     United States   7.0      890   890    890       890   890         890   \n","1     United States   9.0      798   798    798       798   798         798   \n","2     United States   8.0      757   757    757       757   757         757   \n","3     United States   6.0      753   753    753       753   753         753   \n","4     United States   1.0      739   739    739       739   739         739   \n","...             ...   ...      ...   ...    ...       ...   ...         ...   \n","1207          Spain   3.0        0     0      0         0     0           0   \n","1208          Spain   7.0        0     0      0         0     0           0   \n","1209          Spain   8.0        0     0      0         0     0           0   \n","1210          Spain  12.0        0     0      0         0     0           0   \n","1211        Uruguay  12.0        0     0      0         0     0           0   \n","\n","      release_year  rating  duration  listed_in  description  month_name  \\\n","0              890     890       890        890          890         890   \n","1              798     798       798        798          798         798   \n","2              757     757       757        757          757         757   \n","3              753     753       753        753          753         753   \n","4              739     739       739        739          739         739   \n","...            ...     ...       ...        ...          ...         ...   \n","1207             0       0         0          0            0           0   \n","1208             0       0         0          0            0           0   \n","1209             0       0         0          0            0           0   \n","1210             0       0         0          0            0           0   \n","1211             0       0         0          0            0           0   \n","\n","      year  day  \n","0      890  890  \n","1      798  798  \n","2      757  757  \n","3      753  753  \n","4      739  739  \n","...    ...  ...  \n","1207     0    0  \n","1208     0    0  \n","1209     0    0  \n","1210     0    0  \n","1211     0    0  \n","\n","[1212 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-79f3fc93-600b-42e1-8ff9-f297dc0b8a6a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>month</th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","      <th>month_name</th>\n","      <th>year</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>United States</td>\n","      <td>7.0</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","      <td>890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>United States</td>\n","      <td>9.0</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","      <td>798</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>United States</td>\n","      <td>8.0</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","      <td>757</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>United States</td>\n","      <td>6.0</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","      <td>753</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>United States</td>\n","      <td>1.0</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","      <td>739</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1207</th>\n","      <td>Spain</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1208</th>\n","      <td>Spain</td>\n","      <td>7.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1209</th>\n","      <td>Spain</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1210</th>\n","      <td>Spain</td>\n","      <td>12.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1211</th>\n","      <td>Uruguay</td>\n","      <td>12.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1212 rows × 16 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79f3fc93-600b-42e1-8ff9-f297dc0b8a6a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-79f3fc93-600b-42e1-8ff9-f297dc0b8a6a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-79f3fc93-600b-42e1-8ff9-f297dc0b8a6a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":216}]},{"cell_type":"code","source":[""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":580},"id":"5fyI7T5i4XYy","executionInfo":{"status":"ok","timestamp":1658846001611,"user_tz":-330,"elapsed":376,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"57250d37-2770-4536-c64d-d94723946be1"},"execution_count":234,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 101 entries, 0 to 100\n","Data columns (total 2 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   country  101 non-null    object \n"," 1   month    101 non-null    float64\n","dtypes: float64(1), object(1)\n","memory usage: 1.7+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["                  country  month\n","0               Australia    7.0\n","1              Azerbaijan   12.0\n","2                 Belgium    6.0\n","3                  Brazil    8.0\n","4                  Canada   10.0\n","..                    ...    ...\n","96                Ukraine    6.0\n","97   United Arab Emirates    6.0\n","98         United Kingdom    3.0\n","99          United States    7.0\n","100               Uruguay    4.0\n","\n","[101 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-0bbab508-2ce6-4746-9248-614c230f0054\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Australia</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Azerbaijan</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Belgium</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brazil</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Canada</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Ukraine</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>United Arab Emirates</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>United Kingdom</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>United States</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>Uruguay</td>\n","      <td>4.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>101 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bbab508-2ce6-4746-9248-614c230f0054')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0bbab508-2ce6-4746-9248-614c230f0054 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0bbab508-2ce6-4746-9248-614c230f0054');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":234}]},{"cell_type":"code","source":["df_tv=df.loc[(df['type']=='TV Show')&(df['country']!='')]\n","\n","df_tv_new=df_tv.groupby(['country','month']).count().sort_values(by='show_id',ascending=False).reset_index().groupby('country').max().head(10).reset_index()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ttovs3BqzXFM","executionInfo":{"status":"ok","timestamp":1658845015201,"user_tz":-330,"elapsed":3,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"ac2c94f1-57bf-4905-8846-e6523838699d"},"execution_count":212,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: FutureWarning: Dropping invalid columns in DataFrameGroupBy.max is deprecated. In a future version, a TypeError will be raised. Before calling .max, select only columns which should be valid for the function.\n","  \n"]}]},{"cell_type":"code","source":["df_tv_new.head().reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"1SKArvDD3Y-a","executionInfo":{"status":"ok","timestamp":1658844994184,"user_tz":-330,"elapsed":449,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"b2d711b1-284d-4d0b-efbb-00013dff866e"},"execution_count":211,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       country  show_id  type  title  director  cast  date_added  \\\n","0    Australia       15    15     15        15    15          15   \n","1   Azerbaijan       11    11     11        11    11          11   \n","2      Belgium       13    13     13        13    13          13   \n","3       Brazil       25    25     25        25    25          25   \n","4       Canada       70    70     70        70    70          70   \n","\n","   release_year  rating  duration  listed_in  description  month_name  year  \\\n","0            15      15        15         15           15          15    15   \n","1            11      11        11         11           11          11    11   \n","2            13      13        13         13           13          13    13   \n","3            25      25        25         25           25          25    25   \n","4            70      70        70         70           70          70    70   \n","\n","   day  \n","0   15  \n","1   11  \n","2   13  \n","3   25  \n","4   70  "],"text/html":["\n","  <div id=\"df-4ce75c9e-da87-49ca-bbbd-0873a58caba0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>show_id</th>\n","      <th>type</th>\n","      <th>title</th>\n","      <th>director</th>\n","      <th>cast</th>\n","      <th>date_added</th>\n","      <th>release_year</th>\n","      <th>rating</th>\n","      <th>duration</th>\n","      <th>listed_in</th>\n","      <th>description</th>\n","      <th>month_name</th>\n","      <th>year</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Australia</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Azerbaijan</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Belgium</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brazil</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Canada</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","      <td>70</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ce75c9e-da87-49ca-bbbd-0873a58caba0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4ce75c9e-da87-49ca-bbbd-0873a58caba0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4ce75c9e-da87-49ca-bbbd-0873a58caba0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":211}]},{"cell_type":"code","source":["df_tv_list1=df_tv.groupby(['country','month']).count().sort_values(by='show_id',ascending=False).reset_index().groupby('country').agg({'month':'first'}).reset_index()\n","\n","\n","df_tv_list1['month']=df_tv_list1.month.astype('float64')\n","df_tv_list1.info()\n","df_tv_list1"],"metadata":{"id":"QNq3bxtk709H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(20,20))\n","sns.barplot(data=df_tv_list1,x='country',y='month')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"qEKzBAWn3BEa","executionInfo":{"status":"ok","timestamp":1658845956110,"user_tz":-330,"elapsed":5107,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"6ab7bc24-6e93-47d9-ba3b-fcafd49710a3"},"execution_count":233,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd782813f10>"]},"metadata":{},"execution_count":233},{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x1440 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df.cast=df.cast.str.split(',')\n","df=df.explode('cast')"],"metadata":{"id":"OaqSRSoZhfHu","executionInfo":{"status":"ok","timestamp":1658856028743,"user_tz":-330,"elapsed":440,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":282,"outputs":[]},{"cell_type":"code","source":["df=df[df['cast']!='No Data found']\n","cast_df=df['cast'].value_counts().head(5).reset_index()\n"],"metadata":{"id":"6KOnsCjT0Tdp","executionInfo":{"status":"ok","timestamp":1658856031821,"user_tz":-330,"elapsed":406,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":283,"outputs":[]},{"cell_type":"code","source":["cast_df.rename(columns={'index':'Actor'},inplace=True)"],"metadata":{"id":"kOy_IEklGwpE","executionInfo":{"status":"ok","timestamp":1658856035531,"user_tz":-330,"elapsed":409,"user":{"displayName":"apsara G","userId":"04918133941838639230"}}},"execution_count":284,"outputs":[]},{"cell_type":"code","source":["cast_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bKl-VFkFg912","executionInfo":{"status":"ok","timestamp":1658856039830,"user_tz":-330,"elapsed":424,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"9f952cbc-e749-4561-ee10-fbd16ceddb02"},"execution_count":285,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Actor  cast\n","0        Anupam Kher    39\n","1       Rupa Bhimani    31\n","2   Takahiro Sakurai    30\n","3      Julie Tejwani    28\n","4            Om Puri    27"],"text/html":["\n","  <div id=\"df-dda7c62c-a91e-41dd-aaac-567fb8d342b7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actor</th>\n","      <th>cast</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Anupam Kher</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rupa Bhimani</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Takahiro Sakurai</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Julie Tejwani</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Om Puri</td>\n","      <td>27</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dda7c62c-a91e-41dd-aaac-567fb8d342b7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dda7c62c-a91e-41dd-aaac-567fb8d342b7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dda7c62c-a91e-41dd-aaac-567fb8d342b7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":285}]},{"cell_type":"code","source":["plt.figure(figsize=(10,10))\n","sns.barplot(data=cast_df,x='Actor',y='cast')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":623},"id":"dCLAkBoaLDh9","executionInfo":{"status":"ok","timestamp":1658856045553,"user_tz":-330,"elapsed":1272,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"236dde09-882a-4173-8658-e9454f592bef"},"execution_count":286,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd780ffec90>"]},"metadata":{},"execution_count":286},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df.rating.nunique()\n","plt.figure(figsize=(10,10))\n","sns.histplot(df['rating'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":623},"id":"HTdOZ0jLiLCM","executionInfo":{"status":"ok","timestamp":1658857416432,"user_tz":-330,"elapsed":1323,"user":{"displayName":"apsara G","userId":"04918133941838639230"}},"outputId":"a778212e-f9a2-44e1-9c4d-fea54252ff7d"},"execution_count":290,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd780ec2350>"]},"metadata":{},"execution_count":290},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}